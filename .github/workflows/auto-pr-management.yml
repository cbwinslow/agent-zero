name: Auto PR Management

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, closed]
  pull_request_review:
    types: [submitted]

permissions:
  issues: write
  contents: read
  pull-requests: write

jobs:
  manage-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Auto-label PRs
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const labels = [];
            
            // Auto-label based on PR title and changed files
            const title = pr.title.toLowerCase();
            
            if (title.includes('wip') || title.includes('work in progress')) {
              labels.push('work-in-progress');
            }
            if (title.includes('fix') || title.includes('bug')) {
              labels.push('bug-fix');
            }
            if (title.includes('feat') || title.includes('feature')) {
              labels.push('enhancement');
            }
            if (title.includes('docs') || title.includes('documentation')) {
              labels.push('documentation');
            }
            
            // Check for breaking changes
            if (title.includes('breaking') || pr.body.includes('BREAKING CHANGE')) {
              labels.push('breaking-change');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: labels
              });
            }
      
      - name: Link issues from PR body
        if: github.event.action == 'opened' || github.event.action == 'edited'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Extract issue numbers from PR body (e.g., "Fixes #123", "Closes #456")
            const issuePattern = /(close[sd]?|fix(e[sd])?|resolve[sd]?)\s+#(\d+)/gi;
            const matches = [...body.matchAll(issuePattern)];
            
            if (matches.length > 0) {
              const issueNumbers = matches.map(match => match[3]);
              const uniqueIssues = [...new Set(issueNumbers)];
              
              console.log(`Found linked issues: ${uniqueIssues.join(', ')}`);
              
              // Add comment to PR confirming links
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `üîó This PR is linked to the following issues: ${uniqueIssues.map(n => `#${n}`).join(', ')}`
              });
            }
      
      - name: Auto-close linked issues on merge
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Extract issue numbers
            const issuePattern = /(close[sd]?|fix(e[sd])?|resolve[sd]?)\s+#(\d+)/gi;
            const matches = [...body.matchAll(issuePattern)];
            
            if (matches.length > 0) {
              const issueNumbers = matches.map(match => match[3]);
              const uniqueIssues = [...new Set(issueNumbers)];
              
              // Close each linked issue
              for (const issueNumber of uniqueIssues) {
                try {
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: parseInt(issueNumber),
                    state: 'closed'
                  });
                  
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: parseInt(issueNumber),
                    body: `‚úÖ Automatically closed by PR #${pr.number}`
                  });
                  
                  console.log(`Closed issue #${issueNumber}`);
                } catch (error) {
                  console.log(`Failed to close issue #${issueNumber}: ${error.message}`);
                }
              }
            }
      
      - name: Request review for large PRs
        if: github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            // Get PR files
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            
            const changedFiles = files.data.length;
            const additions = files.data.reduce((sum, file) => sum + file.additions, 0);
            const deletions = files.data.reduce((sum, file) => sum + file.deletions, 0);
            
            // Alert for large PRs
            if (changedFiles > 20 || additions > 500) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `‚ö†Ô∏è **Large PR Alert**\n\nThis PR changes ${changedFiles} files with ${additions} additions and ${deletions} deletions. Consider breaking it into smaller PRs for easier review.`
              });
            }
