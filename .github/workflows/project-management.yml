name: Project Board Management

on:
  issues:
    types: [opened, closed, reopened, labeled]
  pull_request:
    types: [opened, closed, merged]

permissions:
  issues: write
  contents: read
  pull-requests: write
  repository-projects: write

jobs:
  manage-project-items:
    runs-on: ubuntu-latest
    
    steps:
      - name: Add new issues to project
        if: github.event.action == 'opened' && github.event.issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            
            // Add comment to indicate it will be added to project
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: 'ðŸ“‹ This issue has been added to the project board for tracking.'
            });
            
            console.log(`Issue #${issue.number} ready for project board`);
      
      - name: Move issue on label change
        if: github.event.action == 'labeled' && github.event.issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const label = context.payload.label;
            
            console.log(`Issue #${issue.number} labeled with: ${label.name}`);
            
            // Map labels to project columns
            const labelToColumn = {
              'in-progress': 'In Progress',
              'review': 'In Review',
              'blocked': 'Blocked',
              'done': 'Done'
            };
            
            if (labelToColumn[label.name]) {
              console.log(`Should move to column: ${labelToColumn[label.name]}`);
              // This would use GitHub Projects V2 API to move the card
            }
      
      - name: Update project on issue closure
        if: github.event.action == 'closed' && github.event.issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            
            // Add completion comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: 'âœ… Issue completed and moved to Done column.'
            });
            
            console.log(`Issue #${issue.number} closed and ready to move to Done`);
      
      - name: Add PR to project
        if: github.event.action == 'opened' && github.event.pull_request
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            console.log(`PR #${pr.number} opened, ready for project board`);
            
            // Extract linked issues
            const body = pr.body || '';
            const issuePattern = /(close[sd]?|fix(e[sd])?|resolve[sd]?)\s+#(\d+)/gi;
            const matches = [...body.matchAll(issuePattern)];
            
            if (matches.length > 0) {
              const issueNumbers = matches.map(match => match[3]);
              const uniqueIssues = [...new Set(issueNumbers)];
              
              // Update linked issues with in-progress label
              for (const issueNumber of uniqueIssues) {
                try {
                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: parseInt(issueNumber),
                    labels: ['in-progress']
                  });
                  
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: parseInt(issueNumber),
                    body: `ðŸ”§ Work started on this issue in PR #${pr.number}`
                  });
                } catch (error) {
                  console.log(`Failed to update issue #${issueNumber}: ${error.message}`);
                }
              }
            }
      
      - name: Update project on PR merge
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            
            console.log(`PR #${pr.number} merged, updating project status`);
            
            // This would move related cards to Done column
            // using GitHub Projects V2 API
