name: Docker Build and Push

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: agent0ai/agent-zero

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/run/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
        platforms: linux/amd64,linux/arm64
        
    - name: Build local Dockerfile
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./DockerfileLocal
        push: false
        tags: agent-zero:local
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
  test-image:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build test image
      run: |
        docker build -t agent-zero:test -f docker/run/Dockerfile .
        
    - name: Test image starts
      run: |
        docker run --rm -d --name agent-zero-test -p 50001:80 agent-zero:test
        sleep 10
        docker logs agent-zero-test
        docker stop agent-zero-test || true
        
    - name: Check for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: agent-zero:test
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
