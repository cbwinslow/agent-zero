name: Auto Issue Management

on:
  issues:
    types: [opened, edited, closed, reopened, labeled]
  issue_comment:
    types: [created]

permissions:
  issues: write
  contents: read
  pull-requests: write

jobs:
  manage-issue:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub
      
      - name: Auto-label issues
        if: github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const labels = [];
            
            // Auto-label based on title/body keywords
            const title = issue.title.toLowerCase();
            const body = (issue.body || '').toLowerCase();
            
            if (title.includes('bug') || body.includes('bug')) {
              labels.push('bug');
            }
            if (title.includes('feature') || title.includes('enhancement')) {
              labels.push('enhancement');
            }
            if (title.includes('documentation') || title.includes('docs')) {
              labels.push('documentation');
            }
            if (title.includes('question') || title.includes('help')) {
              labels.push('question');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
            }
      
      - name: Add to project board
        if: github.event.action == 'opened'
        uses: actions/github-script@v7
        with:
          script: |
            // This is a placeholder for adding to GitHub Projects
            // Projects V2 requires GraphQL API which can be extended
            console.log('Issue opened:', context.payload.issue.number);
      
      - name: Auto-close stale comment
        if: github.event.action == 'created' && github.event.comment.body.includes('/close')
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              state: 'closed'
            });
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.issue.number,
              body: 'âœ… Issue closed via comment command.'
            });
